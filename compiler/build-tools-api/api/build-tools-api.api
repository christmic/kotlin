public abstract interface class org/jetbrains/kotlin/buildtools/api/CompilationService {
	public static final field Companion Lorg/jetbrains/kotlin/buildtools/api/CompilationService$Companion;
	public abstract fun compile (Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilerOptions;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationOptions;Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationCallbacks;)Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationResult;
	public static fun loadImplementation (Ljava/lang/ClassLoader;)Lorg/jetbrains/kotlin/buildtools/api/CompilationService;
}

public final class org/jetbrains/kotlin/buildtools/api/CompilationService$Companion {
	public final fun loadImplementation (Ljava/lang/ClassLoader;)Lorg/jetbrains/kotlin/buildtools/api/CompilationService;
}

public abstract interface class org/jetbrains/kotlin/buildtools/api/KotlinLogger {
	public abstract fun debug (Ljava/lang/String;)V
	public abstract fun error (Ljava/lang/String;)V
	public abstract fun info (Ljava/lang/String;)V
	public abstract fun isDebugEnabled ()Z
	public abstract fun warn (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/buildtools/api/SharedApiClassesClassLoader {
	public static final fun newInstance ()Ljava/lang/ClassLoader;
}

public abstract class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges : java/io/Serializable {
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotDisabled : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges {
	public static final field INSTANCE Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotDisabled;
}

public abstract class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges {
	public abstract fun getClasspathSnapshotFiles ()Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;
}

public abstract class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled$IncrementalRun : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled {
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled$IncrementalRun$NoChanges : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled$IncrementalRun {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;)V
	public fun getClasspathSnapshotFiles ()Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled$IncrementalRun$ToBeComputedByIncrementalCompiler : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled$IncrementalRun {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;)V
	public fun getClasspathSnapshotFiles ()Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled$NotAvailableDueToMissingClasspathSnapshot : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;)V
	public fun getClasspathSnapshotFiles ()Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled$NotAvailableForNonIncrementalRun : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$ClasspathSnapshotEnabled {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;)V
	public fun getClasspathSnapshotFiles ()Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$NotAvailableForJSCompiler : org/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges {
	public static final field INSTANCE Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges$NotAvailableForJSCompiler;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotBasedIncrementalCompilationOptions : org/jetbrains/kotlin/buildtools/api/compilation/IncrementalCompilationOptions {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;Ljava/util/List;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges;)V
	public synthetic fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;Ljava/util/List;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getClasspathChanges ()Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathChanges;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles$Companion;
	public fun <init> (Ljava/util/List;Ljava/io/File;)V
	public final fun getCurrentClasspathEntrySnapshotFiles ()Ljava/util/List;
	public final fun getShrunkPreviousClasspathSnapshotFile ()Ljava/io/File;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/ClasspathSnapshotFiles$Companion {
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/CompilationArgumentsParseException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/CompilationCallbacks {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/KotlinLogger;)V
	public final fun component1 ()Lorg/jetbrains/kotlin/buildtools/api/KotlinLogger;
	public final fun copy (Lorg/jetbrains/kotlin/buildtools/api/KotlinLogger;)Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationCallbacks;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationCallbacks;Lorg/jetbrains/kotlin/buildtools/api/KotlinLogger;ILjava/lang/Object;)Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationCallbacks;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLogger ()Lorg/jetbrains/kotlin/buildtools/api/KotlinLogger;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/buildtools/api/compilation/CompilationOptions {
	public synthetic fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getKotlinScriptExtensions ()Ljava/util/List;
	public final fun getTargetPlatform ()Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/CompilationResult : java/lang/Enum {
	public static final field COMPILATION_ERROR Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationResult;
	public static final field INTERNAL_ERROR Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationResult;
	public static final field OOM_ERROR Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationResult;
	public static final field SUCCESSFUL Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationResult;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationResult;
	public static fun values ()[Lorg/jetbrains/kotlin/buildtools/api/compilation/CompilationResult;
}

public abstract class org/jetbrains/kotlin/buildtools/api/compilation/CompilerOptions {
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/CompilerOptions$Daemon : org/jetbrains/kotlin/buildtools/api/compilation/CompilerOptions {
	public fun <init> (Ljava/util/List;Ljava/io/File;Ljava/util/List;)V
	public final fun getClasspath ()Ljava/util/List;
	public final fun getJvmArguments ()Ljava/util/List;
	public final fun getSessionDir ()Ljava/io/File;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/CompilerOptions$InProcess : org/jetbrains/kotlin/buildtools/api/compilation/CompilerOptions {
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/HistoryFilesBasedIncrementalCompilationOptions : org/jetbrains/kotlin/buildtools/api/compilation/IncrementalCompilationOptions {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;Ljava/util/List;Ljava/io/File;Ljava/io/File;Ljava/io/File;ZLorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleInfo;)V
	public synthetic fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;Ljava/util/List;Ljava/io/File;Ljava/io/File;Ljava/io/File;ZLorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleInfo;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBuildHistoryFile ()Ljava/io/File;
	public final fun getModulesInfo ()Lorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleInfo;
	public final fun getUseModuleDetection ()Z
}

public abstract class org/jetbrains/kotlin/buildtools/api/compilation/IncrementalCompilationOptions : org/jetbrains/kotlin/buildtools/api/compilation/CompilationOptions {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;Ljava/util/List;Ljava/io/File;Ljava/io/File;)V
	public final fun getOutputDirs ()Ljava/util/List;
	public final fun getRootProjectDir ()Ljava/io/File;
	public final fun getSourcesChanges ()Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;
	public final fun getWorkingDir ()Ljava/io/File;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleEntry : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleEntry$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Ljava/io/File;)V
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/io/File;
	public final fun component4 ()Ljava/io/File;
	public final fun component5 ()Ljava/io/File;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Ljava/io/File;)Lorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleEntry;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleEntry;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Ljava/io/File;ILjava/lang/Object;)Lorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleEntry;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAbiSnapshot ()Ljava/io/File;
	public final fun getBuildDir ()Ljava/io/File;
	public final fun getBuildHistoryFile ()Ljava/io/File;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleEntry$Companion {
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleInfo : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleInfo$Companion;
	public fun <init> (Ljava/io/File;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
	public final fun getDirToModule ()Ljava/util/Map;
	public final fun getJarToAbiSnapshot ()Ljava/util/Map;
	public final fun getJarToClassListFile ()Ljava/util/Map;
	public final fun getJarToModule ()Ljava/util/Map;
	public final fun getNameToModules ()Ljava/util/Map;
	public final fun getRootProjectBuildDir ()Ljava/io/File;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/IncrementalModuleInfo$Companion {
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/IntraModuleIncrementalCompilationOptions : org/jetbrains/kotlin/buildtools/api/compilation/IncrementalCompilationOptions {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;Ljava/util/List;Ljava/io/File;Ljava/io/File;)V
	public synthetic fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges;Ljava/util/List;Ljava/io/File;Ljava/io/File;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/NonIncrementalCompilationOptions : org/jetbrains/kotlin/buildtools/api/compilation/CompilationOptions {
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;Ljava/util/List;)V
}

public abstract class org/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges : java/io/Serializable {
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges$Known : org/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges {
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public final fun getModifiedFiles ()Ljava/util/List;
	public final fun getRemovedFiles ()Ljava/util/List;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges$Unknown : org/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges {
	public static final field INSTANCE Lorg/jetbrains/kotlin/buildtools/api/compilation/SourcesChanges$Unknown;
}

public final class org/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform : java/lang/Enum {
	public static final field JS Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;
	public static final field JVM Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;
	public static final field METADATA Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;
	public static fun values ()[Lorg/jetbrains/kotlin/buildtools/api/compilation/TargetPlatform;
}

