package test

public final class ConstructorTypeParamClassObjectConflict</*0*/ test> {
    public final val some: kotlin.Int
        public final fun `<get-some>`(): kotlin.Int

    public companion object Companion {
        public final val test: kotlin.Int
            public final fun `<get-test>`(): kotlin.Int
        /*primary*/ private constructor Companion()
    }
    /*primary*/ public constructor ConstructorTypeParamClassObjectConflict</*0*/ test>()
}

public final class ConstructorTypeParamClassObjectTypeConflict</*0*/ test> {
    public final val some: test?
        public final fun `<get-some>`(): test?

    public companion object Companion {

        public interface test {
        }
        /*primary*/ private constructor Companion()
    }
    /*primary*/ public constructor ConstructorTypeParamClassObjectTypeConflict</*0*/ test>()
}

public final class TestClassObjectAndClassConflict {
    public final val bla: kotlin.String
        public final fun `<get-bla>`(): kotlin.String
    public final val some: kotlin.String
        public final fun `<get-some>`(): kotlin.String

    public companion object Companion {
        public final val bla: kotlin.Int
            public final fun `<get-bla>`(): kotlin.Int
        /*primary*/ private constructor Companion()
    }
    /*primary*/ public constructor TestClassObjectAndClassConflict()
}

public final class TestConstructorParamClassObjectConflict {
    public final val some: kotlin.String
        public final fun `<get-some>`(): kotlin.String

    public companion object Companion {
        public final val test: kotlin.Int
            public final fun `<get-test>`(): kotlin.Int
        /*primary*/ private constructor Companion()
    }
    /*primary*/ public constructor TestConstructorParamClassObjectConflict(/*0*/ test: kotlin.String)
}

public final class TestConstructorValClassObjectConflict {
    public final val test: kotlin.String
        public final fun `<get-test>`(): kotlin.String
    public final val some: kotlin.String
        public final fun `<get-some>`(): kotlin.String

    public companion object Companion {
        public final val test: kotlin.Int
            public final fun `<get-test>`(): kotlin.Int
        /*primary*/ private constructor Companion()
    }
    /*primary*/ public constructor TestConstructorValClassObjectConflict(/*0*/ test: kotlin.String)
}
