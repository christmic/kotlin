package test

@test.OptionGroups(o1 = test.StringOptions(option = {"abc", "d", "ef"}), o2 = test.EnumOption(option = E.ENTRY)) public final class AnnotationInAnnotationArguments {
    /*primary*/ public constructor AnnotationInAnnotationArguments()
}

public final enum class E : kotlin.Enum<test.E> {
    enum entry ENTRY

    @kotlin.internal.IntrinsicConstEvaluation public final override /*1*/ /*fake_override*/ val name: kotlin.String
        public final override /*1*/ /*fake_override*/ fun `<get-name>`(): kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
        public final override /*1*/ /*fake_override*/ fun `<get-ordinal>`(): kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.E): kotlin.Int
    public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<test.E!>!
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
    /*primary*/ private constructor E()

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.E
    public final /*synthesized*/ fun values(): kotlin.Array<test.E>
    public final /*synthesized*/ val entries: kotlin.enums.EnumEntries<test.E>
        public final /*synthesized*/ fun `<get-entries>`(): kotlin.enums.EnumEntries<test.E>
}

public final annotation class EnumOption : kotlin.Annotation {
    public final val option: test.E
        public final fun `<get-option>`(): test.E
    /*primary*/ public constructor EnumOption(/*0*/ option: test.E)
}

public final annotation class OptionGroups : kotlin.Annotation {
    public final val o1: test.StringOptions
        public final fun `<get-o1>`(): test.StringOptions
    public final val o2: test.EnumOption
        public final fun `<get-o2>`(): test.EnumOption
    /*primary*/ public constructor OptionGroups(/*0*/ o1: test.StringOptions, /*1*/ o2: test.EnumOption)
}

public final annotation class StringOptions : kotlin.Annotation {
    public final val option: kotlin.Array<out kotlin.String>
        public final fun `<get-option>`(): kotlin.Array<out kotlin.String>
    /*primary*/ public constructor StringOptions(/*0*/ vararg option: kotlin.String /*kotlin.Array<out kotlin.String>*/)
}
